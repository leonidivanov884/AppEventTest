import React, {FC, useEffect, useState} from 'react';
import './cart.css'
import {useDispatch} from "react-redux";
import {CartActionCreators} from "../../store/reducers/cart/action-creators";
import {CatalogActionCreators} from "../../store/reducers/catalog/action-creators";
import {useTypedSelector} from "../../hook/useTypedSelector";
import { Link } from 'react-router-dom';
import { RouteNames } from '../../router';
import Button from "../../components/Button/Button";

const Cart: FC = () => {
    const [amount, setAmount] = useState(0);
    const {items} = useTypedSelector(state => state.cart)
    const dispatch = useDispatch()

    // –°—á–∏—Ç–∞–µ–º —Å—É–º–º—É –≤ –∫–æ—Ä–∑–∏–Ω–µ
    useEffect(() => {
        const price = items.reduce((total, person): number => {
            return total + person.price
        }, 0)
        setAmount(price)
    }, [items]);

    // –ï—Å–ª–∏ –º–∞—Å—Å–∏–≤ –∫–æ—Ä–∑–∏–Ω—ã –ø—É—Å—Ç, —Ç–æ –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –¥–∞–Ω–Ω—ã–π –±–ª–æ–∫
    if (!items.length){
        return (
            <div className="cartPage__empty">
                <h1 className='cartPage__empty-title'>–ö–æ—Ä–∑–∏–Ω–∞ –ø—É—Å—Ç–∞ üòû</h1>
                <Link className='cartPage__empty-link' to={RouteNames.CATALOG}>–ü–µ—Ä–µ–π–¥–∏—Ç–µ –≤ –∫–∞—Ç–∞–ª–æ–≥, —Ç–∞–º –¥–æ–ª–∂–Ω–æ —á—Ç–æ-—Ç–æ –±—ã—Ç—å. <i>–ù–æ —ç—Ç–æ –Ω–µ —Ç–æ—á–Ω–æ :3</i></Link>
            </div>
        )
    }

    // –£–¥–∞–ª–∏—Ç—å –ø—Ä–µ–¥–º–µ—Ç –∏–∑ –∫–æ—Ä–∑–∏–Ω—ã
    const remove = (id: number) => {
        dispatch(CatalogActionCreators.setInCartOff(id))
        dispatch(CartActionCreators.removeItem(id))
    }

    // –£–¥–∞–ª–∏—Ç—å –≤—Å–µ –ø—Ä–µ–¥–º–µ—Ç—ã –∏–∑ –∫–æ—Ä–∑–∏–Ω—ã
    const removeAll = () => {
        dispatch(CatalogActionCreators.clearStatusInCartAction())
        dispatch(CartActionCreators.removeItems())
    }

    return (
        <div className="cartPage">
            <table className="cartPage__table">
                <tbody>
                    <tr className="cartPage__table-head" >
                        <th>–ù–∞–∑–≤–∞–Ω–∏–µ</th>
                        <th>–¶–µ–Ω–∞</th>
                        <th>Action</th>
                    </tr>
                    {items.map(item =>
                        <tr key={item.id}>
                            <td>{item.name}</td>
                            <td>{item.price}</td>
                            <td><Button onClick={() => remove(item.id)}>–£–¥–∞–ª–∏—Ç—å</Button></td>
                        </tr>
                    )}
                    <tr>
                        <td>–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ç–æ–≤–∞—Ä–æ–≤: {items.length}</td>
                        <td>–û–±—â–∞—è —Ü–µ–Ω–∞: {amount}</td>
                        <td><Button onClick={removeAll}>–£–¥–∞–ª–∏—Ç—å –≤—Å–µ</Button></td>
                    </tr>
                </tbody>
            </table>
        </div>
    );
};



export default Cart;